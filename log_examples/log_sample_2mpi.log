

+----------------------------------------------------------------------+
| The DDalphaAMG solver library  (tuned for K-computer).               |
| Copyright (C) 2018, Matthias Rottmann, Artur Strebel,                |
|       Simon Heybrock, Simone Bacchio, Bjoern Leder, Issaku Kanamori. |
|       Issaku Kanamori, Ken-Ichi Ishikawa.                            |
|                                                                      |
| This program comes with ABSOLUTELY NO WARRANTY.                      |
+----------------------------------------------------------------------+


DDalphaAMG solver library
version info:
  commit 3a11eabecd1615c097f728dd77f27d7d5e35479d
  Author: kanamori <kanamori@hiroshima-u.ac.jp>
  Fri Apr 20 10:36:47 2018 +0900

optimization flags:
OPENMP: on
SSE: off
K_OPT: on
configuration: conf/8x8x8x8b6.0000id3n1

Desired average plaquette: 1.7772950976130 in [0,3]

Desired average plaquette: 0.5924316992043 in [0,1]
BASIS2:QCDSF BASIS
antiperiodic boundary conditions in time
Configuration stored...
average plaquette: 1.7772950976130 in [0,3]

+----------------------------------------------------------+
| read in and set up the parallel dirac operator           |
| elapsed wall clock time: 0.0203776    seconds            |
+----------------------------------------------------------+
initial definition --- depth: 0
[0;42m[1;37m|  20% |  40% |  60% |  80% | 100% |[0m
depth: 0, time spent for setting up next coarser operator: 0.333029 seconds

initial coarse grid correction is defined

initial coarse grid correction is defined

initial coarse grid correction is defined

initial coarse grid correction is defined
elapsed time: 1.836149 seconds

running with 4 openmp threads per process
+----------------------------------------------------------+
| 2-level method                                           |
| postsmoothing K-cycle                                    |
| FGMRES + red-black multiplicative Schwarz                |
|          restart length: 50                              |
|                      m0: -0.500000                       |
|                     csw: +1.000000                       |
+----------------------------------------------------------+
|   preconditioner cycles: 1                               |
|            inner solver: minimal residual iteration      |
|               precision: single                          |
+---------------------- depth  0 --------------------------+
|          global lattice: 8   8   8   8                   |
|           local lattice: 8   8   8   4                   |
|           block lattice: 2   2   2   2                   |
|        post smooth iter: 2                               |
|     smoother inner iter: 4                               |
|              setup iter: 4                               |
|            test vectors: 28                              |
+---------------------- depth  1 --------------------------+
|          global lattice: 4   4   4   2                   |
|           local lattice: 4   4   4   2                   |
|           block lattice: 1   1   1   1                   |
|      coarge grid solver: odd even GMRES                  |
|              iterations: 100                             |
|                  cycles: 5                               |
|               tolerance: 5e-02                           |
+----------------------------------------------------------+
|          K-cycle length: 5                               |
|        K-cycle restarts: 2                               |
|       K-cycle tolerance: 1e-01                           |
+----------------------------------------------------------+


+----------------------------------------------------------+
| solver profiling                                         |
+----------------------------------------------------------+
| depth:   0 / level:   1                time    ( count ) |
+----------------------------------------------------------+
|           global inner product, float: 2.82e-02(     28) |
|       2 flop vector operations, float: 1.59e-03(     54) |
|       8 flop vector operations, float: 9.32e-03(    183) |
|                copy operations, float: 8.02e-03(    260) |
|           set value operations, float: 3.22e-02(  35476) |
|                       smoother, float: 1.25e+00(    168) |
|             operator comm init, float: 5.91e-04(    504) |
|             operator comm wait, float: 2.51e-01(    504) |
|                     allreduces, float: 1.35e-02(     28) |
|     Gram-Schmidt on aggregates, float: 2.74e-02(      1) |
|      smoother - pt 3, res comm, float: 1.66e-02(   5880) |
|    smoother - pt 4, solve comm, float: 3.39e-01(   5880) |
|             block_solve_oddeven float: 3.39e-01(   5880) |
|                    local_minres float: 2.73e-01(   5880) |
|             aux. for tuning, 1: float: 7.15e-02(  35280) |
|             aux. for tuning, 2: float: 4.76e-02(  23520) |
|             aux. for tuning, 3: float: 2.48e-01(  23520) |
|             aux. for tuning, 4: float: 1.98e-02(  23520) |
|             aux. for tuning, 5: float: 7.27e-02(  23520) |
|             aux. for tuning, 6: float: 7.04e-02(  23520) |
|             aux. for tuning, 7: float: 7.01e-02(  23520) |
|          aux. 11[coarse, setup] float: 4.53e-01(      1) |
|             aux. for tuning,12: float: 3.41e-01(      1) |
+----------------------------------------------------------+
| depth:   1 / level:   0                time    ( count ) |
+----------------------------------------------------------+
| data re-distribution comm init, float: 2.98e-06(      2) |
| data re-distribution comm wait, float: 2.06e-03(      2) |
+----------------------------------------------------------+
| flop/lattice site:  1.38e+06                             |
| flop/s/MPIprocess:  1.54e+09                             |
+----------------------------------------------------------+

depth: 0, bootstrap step number 1...
[0;42m[1;37m|  20% |  40% |  60% |  80% | 100% |[0m
depth: 0, time spent for setting up next coarser operator: 0.774097 seconds
depth: 0, bootstrap step number 2...
[0;42m[1;37m|  20% |  40% |  60% |  80% | 100% |[0m
depth: 0, time spent for setting up next coarser operator: 0.815068 seconds
depth: 0, bootstrap step number 3...
[0;42m[1;37m|  20% |  40% |  60% |  80% | 100% |[0m
depth: 0, time spent for setting up next coarser operator: 0.991568 seconds
depth: 0, bootstrap step number 4...
[0;42m[1;37m|  20% |  40% |  60% |  80% | 100% |[0m
depth: 0, time spent for setting up next coarser operator: 0.604060 seconds

performed 4 iterative setup steps
elapsed time: 21.673711 seconds (11.422524 seconds on coarse grid)


+----------------------------------------------------------+
| solver profiling                                         |
+----------------------------------------------------------+
| depth:   0 / level:   1                time    ( count ) |
+----------------------------------------------------------+
|           global inner product, float: 4.69e-01(    224) |
|          process inner product, float: 5.02e-02(    112) |
|       2 flop vector operations, float: 5.55e-03(    152) |
|       8 flop vector operations, float: 2.82e-02(    623) |
|        other vector operations, float: 8.90e-01(      4) |
|                copy operations, float: 1.20e-02(    333) |
|           set value operations, float: 3.06e-03(  47040) |
|  interpolation and restriction, float: 7.45e-01(    224) |
|                       smoother, float: 4.44e+00(    224) |
|             operator comm init, float: 2.06e-03(    896) |
|             operator comm wait, float: 2.05e+00(    896) |
|                     allreduces, float: 7.66e-01(    332) |
|     Gram-Schmidt on aggregates, float: 1.10e-01(      4) |
|      smoother - pt 3, res comm, float: 7.61e-02(   7840) |
|    smoother - pt 4, solve comm, float: 4.55e-01(   7840) |
|             block_solve_oddeven float: 4.54e-01(   7840) |
|                    local_minres float: 3.66e-01(   7840) |
|             aux. for tuning, 1: float: 9.59e-02(  47040) |
|             aux. for tuning, 2: float: 6.41e-02(  31360) |
|             aux. for tuning, 3: float: 3.32e-01(  31360) |
|             aux. for tuning, 4: float: 2.63e-02(  31360) |
|             aux. for tuning, 5: float: 9.75e-02(  31360) |
|             aux. for tuning, 6: float: 9.38e-02(  31360) |
|             aux. for tuning, 7: float: 9.40e-02(  31360) |
|             aux. for tuning,12: float: 1.66e+01(    112) |
|             aux. for tuning,13: float: 4.68e-01(    112) |
|             aux. for tuning,15: float: 3.60e+00(      4) |
+----------------------------------------------------------+
| depth:   1 / level:   0                time    ( count ) |
+----------------------------------------------------------+
|           global inner product, float: 1.14e-01(    746) |
|          process inner product, float: 2.26e-01(    690) |
|       2 flop vector operations, float: 2.50e-03(    199) |
|       6 flop vector operations, float: 1.87e-04(     14) |
|       8 flop vector operations, float: 1.70e-02(   1473) |
|                copy operations, float: 2.03e-04(     14) |
|           set value operations, float: 4.79e-01(   5110) |
|                  self coupling, float: 7.68e-01(   1492) |
|              neighbor coupling, float: 1.01e+01(   1492) |
|                     allreduces, float: 2.13e-03(   2872) |
| data re-distribution comm init, float: 2.22e-03(    232) |
| data re-distribution comm wait, float: 3.55e-01(    232) |
|           Hessenberg: qr update float: 3.36e-04(  58422) |
|          Hessenberg: bkwd subst float: 1.55e-04(  11117) |
|  aux. 8[coarse_solve_odd_even]: float: 1.14e+01(    112) |
|             aux. for tuning, 9: float: 2.71e-01(   1604) |
|             aux. for tuning,10: float: 5.30e+00(   1604) |
+----------------------------------------------------------+
| flop/lattice site:  1.26e+07                             |
| flop/s/MPIprocess:  1.19e+09                             |
+----------------------------------------------------------+

rhs = ones
+----------------------------------------------------------+
| approx. rel. res. after  1      iterations: 9.457209e-02 |
| approx. rel. res. after  2      iterations: 1.378887e-02 |
| approx. rel. res. after  3      iterations: 2.406653e-03 |
| approx. rel. res. after  4      iterations: 4.012944e-04 |
| approx. rel. res. after  5      iterations: 6.660635e-05 |
| approx. rel. res. after  6      iterations: 1.132579e-05 |
| approx. rel. res. after  7      iterations: 1.933146e-06 |
| approx. rel. res. after  8      iterations: 3.314190e-07 |
| approx. rel. res. after  9      iterations: 5.636615e-08 |
| approx. rel. res. after  10     iterations: 9.474413e-09 |
| approx. rel. res. after  11     iterations: 1.559097e-09 |
| approx. rel. res. after  12     iterations: 2.560787e-10 |
| approx. rel. res. after  13     iterations: 4.255806e-11 |
+----------------------------------------------------------+

+----------------------------------------------------------+
|       FGMRES iterations: 13     coarse average: 10.92    |
| exact relative residual: ||r||/||b|| = 4.255806e-11      |
| elapsed wall clock time: 1.8215   seconds                |
|        coarse grid time: 1.0439   seconds (57.3%)        |
|  consumed core minutes*: 2.43e-01 (solve only)           |
|    max used mem/MPIproc: 1.66e-01 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs


+----------------------------------------------------------+
| solver profiling                                         |
+----------------------------------------------------------+
| depth:   0 / level:   1                time    ( count ) |
+----------------------------------------------------------+
|          global inner product, double: 2.19e-02(     15) |
|         process inner product, double: 5.24e-03(     13) |
|      2 flop vector operations, double: 6.99e-04(      3) |
|      6 flop vector operations, double: 6.92e-05(      0) |
|      8 flop vector operations, double: 1.95e-03(     26) |
|               copy operations, double: 4.00e-05(      0) |
|                 self coupling, double: 2.22e-03(     14) |
|             neighbor coupling, double: 4.36e-02(     14) |
|            operator comm init, double: 1.09e-04(     28) |
|            operator comm wait, double: 1.45e-02(     28) |
|                    allreduces, double: 3.56e-02(     28) |
|          Hessenberg: qr update double: 3.55e-06(    546) |
|         Hessenberg: bkwd subst double: 2.01e-06(    104) |
|       2 flop vector operations, float: 3.50e-04(     10) |
|       8 flop vector operations, float: 1.47e-03(     28) |
|                copy operations, float: 1.00e-03(     34) |
|           set value operations, float: 3.60e-04(   5460) |
|  interpolation and restriction, float: 1.59e-01(     26) |
|                       smoother, float: 4.98e-01(     26) |
|             operator comm init, float: 1.95e-04(    104) |
|             operator comm wait, float: 2.42e-01(    104) |
|      smoother - pt 3, res comm, float: 9.01e-03(    910) |
|    smoother - pt 4, solve comm, float: 5.30e-02(    910) |
|             block_solve_oddeven float: 5.29e-02(    910) |
|                    local_minres float: 4.26e-02(    910) |
|             aux. for tuning, 1: float: 1.12e-02(   5460) |
|             aux. for tuning, 2: float: 7.43e-03(   3640) |
|             aux. for tuning, 3: float: 3.87e-02(   3640) |
|             aux. for tuning, 4: float: 3.06e-03(   3640) |
|             aux. for tuning, 5: float: 1.14e-02(   3640) |
|             aux. for tuning, 6: float: 1.10e-02(   3640) |
|             aux. for tuning, 7: float: 1.10e-02(   3640) |
+----------------------------------------------------------+
| depth:   1 / level:   0                time    ( count ) |
+----------------------------------------------------------+
|           global inner product, float: 2.66e-03(     77) |
|          process inner product, float: 5.23e-03(     71) |
|       2 flop vector operations, float: 2.53e-04(     20) |
|       6 flop vector operations, float: 2.08e-05(      1) |
|       8 flop vector operations, float: 1.51e-03(    131) |
|                copy operations, float: 2.46e-05(      1) |
|           set value operations, float: 3.01e-02(    529) |
|                  self coupling, float: 7.91e-02(    155) |
|              neighbor coupling, float: 9.49e-01(    155) |
|                     allreduces, float: 2.40e-04(    297) |
| data re-distribution comm init, float: 5.72e-05(     26) |
| data re-distribution comm wait, float: 7.00e-02(     26) |
|           Hessenberg: qr update float: 3.24e-05(   5106) |
|          Hessenberg: bkwd subst float: 1.39e-05(    993) |
|  aux. 8[coarse_solve_odd_even]: float: 1.04e+00(     13) |
|             aux. for tuning, 9: float: 2.86e-02(    168) |
|             aux. for tuning,10: float: 5.08e-01(    168) |
+----------------------------------------------------------+
| flop/lattice site:  1.36e+06                             |
| flop/s/MPIprocess:  1.53e+09                             |
+----------------------------------------------------------+

